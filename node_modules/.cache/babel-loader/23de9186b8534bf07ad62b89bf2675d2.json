{"ast":null,"code":"import _toConsumableArray from \"/Users/duhnlic/Documents/SEIR_ERICA/enterprise_transfer/ToDo/to-do-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/duhnlic/Documents/SEIR_ERICA/enterprise_transfer/ToDo/to-do-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/duhnlic/Documents/SEIR_ERICA/enterprise_transfer/ToDo/to-do-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ToDoList from \"./Components/ToDoList/ToDoList\";\nimport CompletedList from \"./Components/CompletedIList/CompletedList\";\nimport Form from \"./Components/Form/Form\";\nimport \"./styles.css\";\nimport toDoListData from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState(toDoListData.filter(function (item) {\n    return !item.completed;\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      toDoItems = _useState2[0],\n      updateToDoItems = _useState2[1];\n\n  var _useState3 = useState(toDoListData.filter(function (item) {\n    return item.completed;\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      completedItems = _useState4[0],\n      updateCompleted = _useState4[1];\n\n  var addToCompleted = function addToCompleted(index) {\n    var newToDos = _toConsumableArray(toDoItems);\n\n    var completEd = newToDos.splice(index, 1);\n    completEd[0].completed = true;\n    updateToDoItems(newToDos);\n    updateCompleted([].concat(_toConsumableArray(completEd), _toConsumableArray(completedItems))); // completEd[0].completed = true;\n\n    /*\n    Create a copy of the the todo items\n    Remove item at index from the todo list\n    Update completed property to true\n    Move Item to the top of the completed items list\n    Use only State Setter Methods so that you don't\n    update state directly\n    */\n  };\n\n  var removeFromCompleted = function removeFromCompleted(index) {\n    var done = _toConsumableArray(completedItems);\n\n    done.splice(index, 1); // let finished = done.splice(index, 1);\n    // updateToDoItems([...toDoItems, ...finished]);\n\n    updateCompleted(done);\n    /*\n    Create a copy of the the completed items\n    Remove item from completed list\n    Use only State Setter Methods so that you don't\n    update state directly\n    */\n  };\n\n  var handleSubmit = function handleSubmit(item) {\n    updateToDoItems([{\n      title: item,\n      complete: false\n    }].concat(_toConsumableArray(toDoItems)));\n    /* \n      See Form Component and Data\n      If this function is longer than one line it's probably wrong\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My to do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      toDoItems: toDoItems,\n      addToCompleted: addToCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompletedList, {\n      completedItems: completedItems,\n      removeFromCompleted: removeFromCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FzcFzJHFcFnFjtqkZmmKdJswOl0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/duhnlic/Documents/SEIR_ERICA/enterprise_transfer/ToDo/to-do-list/src/App.js"],"names":["useState","ToDoList","CompletedList","Form","toDoListData","App","filter","item","completed","toDoItems","updateToDoItems","completedItems","updateCompleted","addToCompleted","index","newToDos","completEd","splice","removeFromCompleted","done","handleSubmit","title","complete"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,QAAzB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,kBAAqCL,QAAQ,CAC3CI,YAAY,CAACE,MAAb,CAAoB,UAACC,IAAD;AAAA,WAAU,CAACA,IAAI,CAACC,SAAhB;AAAA,GAApB,CAD2C,CAA7C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,eAAlB;;AAGA,mBAA0CV,QAAQ,CAChDI,YAAY,CAACE,MAAb,CAAoB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,SAAf;AAAA,GAApB,CADgD,CAAlD;AAAA;AAAA,MAAOG,cAAP;AAAA,MAAuBC,eAAvB;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,QAAIC,QAAQ,sBAAON,SAAP,CAAZ;;AACA,QAAIO,SAAS,GAAGD,QAAQ,CAACE,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB,CAAhB;AACAE,IAAAA,SAAS,CAAC,CAAD,CAAT,CAAaR,SAAb,GAAyB,IAAzB;AACAE,IAAAA,eAAe,CAACK,QAAD,CAAf;AACAH,IAAAA,eAAe,8BAAKI,SAAL,sBAAmBL,cAAnB,GAAf,CALgC,CAMhC;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACG,GAhBD;;AAkBA,MAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,KAAD,EAAW;AACrC,QAAIK,IAAI,sBAAOR,cAAP,CAAR;;AACAQ,IAAAA,IAAI,CAACF,MAAL,CAAYH,KAAZ,EAAmB,CAAnB,EAFqC,CAGrC;AACA;;AACAF,IAAAA,eAAe,CAACO,IAAD,CAAf;AAEA;AACJ;AACA;AACA;AACA;AACA;AACG,GAbD;;AAeA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACb,IAAD,EAAU;AAC7BG,IAAAA,eAAe,EAAE;AAAEW,MAAAA,KAAK,EAAEd,IAAT;AAAee,MAAAA,QAAQ,EAAE;AAAzB,KAAF,4BAAuCb,SAAvC,GAAf;AACA;AACJ;AACA;AACA;AACG,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEW;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEX,SAArB;AAAgC,MAAA,cAAc,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,aAAD;AACE,MAAA,cAAc,EAAEF,cADlB;AAEE,MAAA,mBAAmB,EAAEO;AAFvB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5DuBb,G;;KAAAA,G","sourcesContent":["import { useState } from \"react\";\nimport ToDoList from \"./Components/ToDoList/ToDoList\";\nimport CompletedList from \"./Components/CompletedIList/CompletedList\";\nimport Form from \"./Components/Form/Form\";\nimport \"./styles.css\";\nimport toDoListData from \"./data\";\n\nexport default function App() {\n  const [toDoItems, updateToDoItems] = useState(\n    toDoListData.filter((item) => !item.completed)\n  );\n  const [completedItems, updateCompleted] = useState(\n    toDoListData.filter((item) => item.completed)\n  );\n\n  const addToCompleted = (index) => {\n    let newToDos = [...toDoItems];\n    let completEd = newToDos.splice(index, 1);\n    completEd[0].completed = true;\n    updateToDoItems(newToDos);\n    updateCompleted([...completEd, ...completedItems]);\n    // completEd[0].completed = true;\n\n    /*\n    Create a copy of the the todo items\n    Remove item at index from the todo list\n    Update completed property to true\n    Move Item to the top of the completed items list\n    Use only State Setter Methods so that you don't\n    update state directly\n   */\n  };\n\n  const removeFromCompleted = (index) => {\n    let done = [...completedItems];\n    done.splice(index, 1);\n    // let finished = done.splice(index, 1);\n    // updateToDoItems([...toDoItems, ...finished]);\n    updateCompleted(done);\n\n    /*\n    Create a copy of the the completed items\n    Remove item from completed list\n    Use only State Setter Methods so that you don't\n    update state directly\n   */\n  };\n\n  const handleSubmit = (item) => {\n    updateToDoItems([{ title: item, complete: false }, ...toDoItems]);\n    /* \n      See Form Component and Data\n      If this function is longer than one line it's probably wrong\n    */\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>My to do list</h1>\n      <Form handleSubmit={handleSubmit} />\n      <ToDoList toDoItems={toDoItems} addToCompleted={addToCompleted} />\n      <CompletedList\n        completedItems={completedItems}\n        removeFromCompleted={removeFromCompleted}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}